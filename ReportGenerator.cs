using QuestPDF.Fluent;
using QuestPDF.Helpers;
using QuestPDF.Infrastructure;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace ExpenseTrackerMAUI;

public class ReportGenerator
{
    public static void Generate(List<Expense> expenses, string username)
    {
        QuestPDF.Settings.License = LicenseType.Community;

        var total = expenses.Sum(e => e.Amount);
        var fileName = Path.Combine(FileSystem.AppDataDirectory, $"ExpenseReport_{username}_{DateTime.Now:yyyyMMdd_HHmm}.pdf");

        Document.Create(container =>
        {
            container.Page(page =>
            {
                page.Margin(40);
                page.Size(PageSizes.A4);
                page.PageColor(QuestPDF.Helpers.Colors.White);
                page.DefaultTextStyle(x => x.FontSize(12));

                page.Header().Column(header =>
                {
                    header.Item().Text("Personal Expense Report")
                        .FontSize(20)
                        .Bold()
                        .AlignCenter();

                    header.Item().Text($"Username: {username}")
                        .FontSize(12)
                        .AlignCenter();
                });

                page.Content().Column(col =>
                {
                    col.Item().Text($"Generated: {DateTime.Now:g}");
                    col.Item().Text($"Total Expenses: €{total:F2}").Bold().FontSize(14);

                    col.Item().Table(table =>
                    {
                        table.ColumnsDefinition(columns =>
                        {
                            columns.RelativeColumn();
                            columns.RelativeColumn();
                            columns.ConstantColumn(80);
                        });

                        table.Header(header =>
                        {
                            header.Cell().Element(HeaderCell).Text("Date");
                            header.Cell().Element(HeaderCell).Text("Category");
                            header.Cell().Element(HeaderCell).Text("Amount (€)");
                        });

                        foreach (var exp in expenses)
                        {
                            table.Cell().Element(BodyCell).Text(exp.ExpenseDate.ToShortDateString());
                            table.Cell().Element(BodyCell).Text(exp.Category);
                            table.Cell().Element(BodyCell).Text($"{exp.Amount:F2}");
                        }
                    });
                });

                page.Footer().AlignCenter().Text("Generated by Ivan Martin – Expense Tracker App");
            });
        }).GeneratePdf(fileName);

        Launcher.Default.OpenAsync(fileName);
    }

    private static QuestPDF.Infrastructure.IContainer HeaderCell(QuestPDF.Infrastructure.IContainer container) =>
        container
            .Padding(5)
            .Background(QuestPDF.Helpers.Colors.Grey.Lighten2)
            .DefaultTextStyle(x => x.SemiBold());

    private static QuestPDF.Infrastructure.IContainer BodyCell(QuestPDF.Infrastructure.IContainer container) =>
        container.Padding(5);
}
